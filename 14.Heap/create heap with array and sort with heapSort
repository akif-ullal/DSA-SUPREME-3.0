#include<iostream>
using namespace std;

class Heap{
public:
int *arr;
int capacity;
int index;

Heap(int val)
{
  this->capacity=val;
  this->index=0;
  arr=new int[capacity+1];
}

void insert(int data)
{

  if(index==capacity-1)
  {
    cout<<"overflow"<<endl;
    return;
  }
  index++;

  arr[index]=data;
  int i=index;
  while(i>1)
    {
      int parent=i/2;

      if(arr[parent]<arr[i])
      {
        swap(arr[parent],arr[i]);
        i=parent;
      }
      else
      {
        break;
      }
    }
}

void deleteFromHeap()
{
  if (index == 1) {
      cout << "Heap is empty!" << endl;
      return;
  }
  arr[1]=arr[index];
  index--;

  int i = 1;
  while(i<index)
    {
      int curr=i;
      int leftChild=2*i;
      int rightChild=2*i+1;

      if(leftChild <= index && arr[leftChild]>arr[curr])
      {
        curr=leftChild;
      }

      if(rightChild <= index && arr[rightChild]>arr[curr])
        {
          curr=rightChild;
        }

      if(curr!=i)
      {
        swap(arr[curr],arr[i]);
        i=curr;
      }
      else{
        break;
      }
      
    }
}

void print()
{
  for(int i=1;i<=index;i++)
    {
      cout<<arr[i]<<" ";
    }
  cout<<endl;
}

};

void heapify(int arr[],int n,int i)
{
  int largestVal=i;
  int leftChild=2*i;
  int rightChild=2*i+1;

  if(leftChild <= n && arr[leftChild] > arr[largestVal])
  {
    largestVal=leftChild;
  }

  if(rightChild <= n && arr[rightChild] > arr[largestVal])
  {
    largestVal=rightChild;
  }

  if(largestVal!=i)
  {
    swap(arr[i],arr[largestVal]);
    heapify(arr,n,largestVal);
  }
}

void heapSort(int arr[],int n)
{
  
  for(int i=n;i>0;i--)
    {
      swap(arr[i],arr[1]);
      heapify(arr,i-1,1);
    }
}

void bulidHeap(int arr[],int n)
{
  for(int i=n/2;i>0;i--)
    {
      heapify(arr,n,i);
    }
}
int main()
 {

  int arr[]={-1,10,20,30,40,50};
  int size=5;

   bulidHeap(arr,size);

    for(int i=1;i<=size;i++)
      {
        cout<<arr[i]<<" ";
      }
     cout<<endl;

  heapSort(arr,size);

   for(int i=1;i<=size;i++)
     {
       cout<<arr[i]<<" ";
     }
    cout<<endl;
  
}

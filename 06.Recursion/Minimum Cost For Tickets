class Solution {
public:
    int mincostTickets_finder(vector<int>& days, vector<int>& costs,int i)
    {
        if(i>=days.size())
        {
            return 0;
        }
        int cost1=costs[0]+mincostTickets_finder(days,costs,i+1);
        int j=i;
        int days7pass=days[i]+7-1;
        while(j<days.size() && days[j]<=days7pass)
        {
            j++;
        }
        int cost7=costs[1]+mincostTickets_finder(days,costs,j);

        j=i;
        int days30pass=days[i]+30-1;
        while(j<days.size() && days[j]<=days30pass)
        {
            j++;
        }
        int cost30=costs[2]+mincostTickets_finder(days,costs,j);

        return min(cost1,min(cost7,cost30));

    }
    int mincostTickets(vector<int>& days, vector<int>& costs) {
        return mincostTickets_finder(days,costs,0);
    }
};

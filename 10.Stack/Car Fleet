class Solution {
public:

    class Car{
        public:
        int pos;
        int speed;

        Car(int _pos,int _speed):pos(_pos),speed(_speed)
        {}

        static bool mycomp(Car&a,Car&b)
        {
            return a.pos<b.pos;
        }
    };
    int carFleet(int target, vector<int>& position, vector<int>& speed) {
        vector<Car>cars;
        for(int i=0;i<position.size();i++)
        {
            Car car(position[i],speed[i]);
            cars.push_back(car);
        }

        sort(cars.begin(),cars.end(),Car::mycomp);

        
        
        stack<float>st;
        for(auto car:cars)
        {
            float time=(target-car.pos)/(float)car.speed;
            while(!st.empty() && time>=st.top())
            {
                st.pop();
            }
            st.push(time);
        }
        return st.size();
    }
};

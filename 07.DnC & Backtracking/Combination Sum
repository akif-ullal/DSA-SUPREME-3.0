class Solution {
public:
    void combinationSum_helper(vector<int>& candidates, int target,vector<vector<int>>&ans,vector<int>&ways,int index)
    {
        if(target==0)
        {
            ans.push_back(ways);
            return;
        }
        if(target<0)
        {
            return;
        }
        for(int i=index;i<candidates.size();i++)
        {
            ways.push_back(candidates[i]);
            combinationSum_helper(candidates,target-candidates[i],ans,ways,i);
            ways.pop_back();
        }
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>>ans;
        vector<int>ways;
        combinationSum_helper(candidates,target,ans,ways,0);
        return ans;
    }
};

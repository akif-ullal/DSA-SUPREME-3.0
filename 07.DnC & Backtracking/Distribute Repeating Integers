class Solution {
public:

    bool canDistribute_helper(vector<int>& counts, vector<int>& quantity,int quantityIndex)
    {
        if(quantityIndex==quantity.size())
        {
            return true;
        }

        for(int i=0;i<counts.size();++i)
        {
            if(counts[i]>=quantity[quantityIndex])
            {
                counts[i]-=quantity[quantityIndex];
                if(canDistribute_helper(counts,quantity,quantityIndex+1))
                {
                    return true;
                }
                counts[i]+=quantity[quantityIndex];
            }
        }
        return false;
    }
    bool canDistribute(vector<int>& nums, vector<int>& quantity) {
     unordered_map<int,int>count;
     for(auto e:nums)
     {
        count[e]++;
     }
     vector<int>counts;  
     for(auto i:count)
     {
        counts.push_back(i.second);
     }
     sort(quantity.rbegin(),quantity.rend());
     return canDistribute_helper(counts,quantity,0);
    }
};

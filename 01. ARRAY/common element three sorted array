//using set approach with in array

class Solution
{
    public:    
       vector <int> commonElements (int A[], int B[], int C[], int n1, int n2, int n3)
        {
            //code here.
            set<int>st;
            vector<int>ans;
            int i,j,k;
            i=0,j=0,k=0;
            while(i<n1 && j<n2 && k<n3)
            {
                if(A[i]==B[j] && B[j]==C[k] && C[k]==A[i])
                {
                    st.insert(A[i]);
                    i++;
                    j++;
                    k++;
                }
                else if(A[i]<B[j])
                {
                    i++;
                }
                else if(B[j]<C[k])
                {
                    j++;
                }
                else {
                    k++;
                }
                
            }
            for(auto i:st)
            {
                ans.push_back(i);
            }
            return ans;
        }

};

//using two pointer approach with in vector

class Solution {
  public:
    // Function to find common elements in three arrays.
    vector<int> commonElements(vector<int> &arr1, vector<int> &arr2,
                               vector<int> &arr3) {
        // Code Here
       
            set<int>st;
            vector<int>ans;
            int i,j,k;
            i=0,j=0,k=0;
            int n1=arr1.size();
            int n2=arr2.size();
            int n3=arr3.size();
            while(i<n1 && j<n2 && k<n3)
            {
                if(arr1[i]==arr2[j] && arr2[j]==arr3[k] && arr3[k]==arr1[i])
                {
                    ans.push_back(arr1[i]);
                    i++;
                    j++;
                    k++;
                }
                else if(arr1[i]<arr2[j])
                {
                    i++;
                }
                else if(arr2[j]<arr3[k])
                {
                    j++;
                }
                else if(arr3[k]<arr2[j]||arr3[k]<arr1[i]) {
                    k++;
                }
                  int x=arr1[i-1];
                while(arr1[i]==x)
                {
                    i++;
                }
                
                int y=arr2[j-1];
                while(arr2[j]== y)
                {
                    j++;
                }
                
                int z=arr3[k-1];
                while(arr3[k]== z)
                {
                    k++;
                }
                
            }
           
            return ans;
        
    }
};



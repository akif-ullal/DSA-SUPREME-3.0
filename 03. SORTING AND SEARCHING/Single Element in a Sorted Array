class Solution {
public:
    int singleNonDuplicate(vector<int>& arr) {

    int n=arr.size();
    int s=0;
    int e=n-1;
    int mid=s+(e-s)/2;
    
    while(s<=e)
    {
        cout<<"mid: "<<mid<<endl;
        if(s==e)
        {
            return arr[s];
        }
        int currentmid=arr[mid];
        int leftside=-1;
        int rightside=-1;

        if(mid-1>=0)
        {
            leftside=arr[mid-1];
        }
        if(mid+1<n)
        {
            rightside=arr[mid+1];
        }
        
        if(currentmid!=rightside && currentmid!=leftside)
        {
            return currentmid;
        }
        else if(currentmid==leftside)
        {
            int startingindex=mid-1;
            if(startingindex & 1)
            {
                e=mid-1;

            }else{
                s=mid+1;
            }
            
        }
        else if(currentmid==rightside)
        {
            int startingindex=mid;
            if(startingindex & 1)
            {
                e=mid-1;
            }else{
                s=mid+1;
            }
        }
        mid=s+(e-s)/2;
    }
    return -1;
}
};

class Solution {
  public:
    // Function to find minimum number of pages.
    bool possiblesolution(int arr[],int n,int m,int sol)
    {
        int pagesum=0;
        int count=1;
       for(int i=0;i<n;i++)
       {
           if(arr[i]>sol)
           {
               return false;
           }
           if(pagesum+arr[i]>sol)
           {
               count++;
               pagesum=0;
               pagesum=pagesum+arr[i];
               if(count>m)
               {
                   return false;
               }
           }
           else if(pagesum+arr[i]<=sol)
           {
               pagesum=pagesum+arr[i];
           }
       }
       return true;
    }
    long long findPages(int n, int arr[], int m) {
        // code here
        int s=0;
        int e=accumulate(arr,arr+n,0);
        int ans=-1;
        if(m>n)
        {
            return -1;
        }
        while(s<=e)
        {
            int mid=s+(e-s)/2;
            if(possiblesolution(arr,n,m,mid))
            {
                ans=mid;
                e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return ans;
        
    }
};

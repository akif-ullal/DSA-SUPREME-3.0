class Solution {
public:

    int SolveUsingRec(int s,int e)
    {
        if(s>=e)
        return 0;

        int ans=INT_MAX;
        for(int i=s;i<e;i++)
        {
            int lower=SolveUsingRec(s,i-1);
            int higher=SolveUsingRec(i+1,e);
            int amt=i+max(lower,higher);
            ans=min(ans,amt);
            
        }
        return ans;
    }

    int SolveUsingMem(int s,int e,vector<vector<int>>&dp)
    {
        if(s>=e)
        return 0;

        if(dp[s][e]!=-1)
        return dp[s][e];

        int ans=INT_MAX;
        for(int i=s;i<e;i++)
        {
            int lower=SolveUsingMem(s,i-1,dp);
            int higher=SolveUsingMem(i+1,e,dp);
            int amt=i+max(lower,higher);
            ans=min(ans,amt);
            
        }
        dp[s][e]=ans;
        return dp[s][e];
    }

    int SolveUsingTab(int n)
    {
        vector<vector<int>>dp(n+1,vector<int>(n+1,0));

        for(int s=n;s>=1;s--)
        {
            for(int e=1;e<=n;e++)
            {
                if(s>=e)
                {
                    continue;
                }
                else
                {
                int ans=INT_MAX;
                for(int i=s;i<e;i++)
                {
                    int lower=dp[s][i-1];
                    int higher=dp[i+1][e];
                    int amt=i+max(lower,higher);
                    ans=min(ans,amt);
                    
                }
                dp[s][e]=ans;
                }

            }
        }
        return dp[1][n];
    }
    int getMoneyAmount(int n) {

        //vector<vector<int>>dp(n+1,vector<int>(n+1,-1));
        int ans=SolveUsingTab(n);
        return ans;
    }
};

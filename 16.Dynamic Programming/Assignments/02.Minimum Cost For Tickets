class Solution {
public:

    int solveRec(vector<int>& days, vector<int>& costs,int i)
    {
        if(i>=days.size())
        return 0;

        int cost1=costs[0]+solveRec(days,costs,i+1);

        int endingPoint=days[i]+7-1;

        int j=i;

        while(j<days.size() && days[j]<=endingPoint)
        j++;

        int cost7=costs[1]+solveRec(days,costs,j);

        endingPoint=days[i]+30-1;
        j=i;

        while(j<days.size() && days[j]<=endingPoint)
        j++;

        int cost30=costs[2]+solveRec(days,costs,j);

        return min(cost1,min(cost7,cost30));
    }

    int solveMem(vector<int>& days, vector<int>& costs,int i,vector<int>&dp)
    {
        if(i>=days.size())
        return 0;

        if(dp[i]!=-1)
        return dp[i];

        int cost1=costs[0]+solveMem(days,costs,i+1,dp);

        int endingPoint=days[i]+7-1;

        int j=i;

        while(j<days.size() && days[j]<=endingPoint)
        j++;

        int cost7=costs[1]+solveMem(days,costs,j,dp);

        endingPoint=days[i]+30-1;
        j=i;

        while(j<days.size() && days[j]<=endingPoint)
        j++;

        int cost30=costs[2]+solveMem(days,costs,j,dp);

        int ans=min(cost1,min(cost7,cost30));
        dp[i]=ans;
        return dp[i];
    }

    int solveTab(vector<int>& days, vector<int>& costs)
    {
        int n=days.size();
        vector<int>dp(n+1,0);

        for(int i=n-1;i>=0;i--)
        {
            int cost1=costs[0]+dp[i+1];

            int endingPoint=days[i]+7-1;

            int j=i;

            while(j<days.size() && days[j]<=endingPoint)
            j++;

            int cost7=costs[1]+dp[j];

            endingPoint=days[i]+30-1;
            j=i;

            while(j<days.size() && days[j]<=endingPoint)
            j++;

            int cost30=costs[2]+dp[j];

            int ans=min(cost1,min(cost7,cost30));
            dp[i]=ans;
        }
        return dp[0];
    }

    int mincostTickets(vector<int>& days, vector<int>& costs) {
        vector<int>dp(days.size()+1,-1);
        int ans = solveTab(days,costs);
        return ans;
    }
};

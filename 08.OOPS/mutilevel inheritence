#include <iostream>
#include <string>

using namespace std;

class Vehicle
{
protected:
    string name;
    string model;
    int noOfTyres;

public:
    Vehicle(string _name, string _model, int _noOfTyres)
    {
        cout << "I am inside Vehicle ctor" << endl;
        this->name = _name;
        this->model = _model;
        this->noOfTyres = _noOfTyres;
    }

    void start_engine()
    {
        cout << "Engine is starting " << name << " " << model << endl;
    }

    void stop_engine()
    {
        cout << "Engine is stopping " << name << " " << model << endl;
    }

    ~Vehicle()
    {
        cout << "I am inside Vehicle dtor" << endl;
    }
};

class Car : public Vehicle
{
protected:
    int noOfDoors;
    string transmissionType;

public:
    Car(string _name, string _model, int _noOfTyres, int _noOfDoors, string _transmissionType) : Vehicle(_name, _model, _noOfTyres)
    {
        cout << "I am inside Car ctor" << endl;
        this->noOfDoors = _noOfDoors;
        this->transmissionType = _transmissionType;
    }

    void startAC()
    {
        cout << "AC has started of " << name << endl;
    }

    ~Car()
    {
        cout << "I am inside Car dtor" << endl;
    }
};

class MotorCycle : public Car{
  protected:
  int stand;
  public:
  MotorCycle(string _name, string _model, int _noOfTyres, int _noOfDoors, string _transmissionType,int _stand) : Car(_name,_model,noOfTyres,_noOfDoors,_transmissionType)
  {
    cout << "I am inside MoterCycle ctor" << endl;
    this->stand=_stand;
  }
  void wheelie()
  {
    cout<<"wheeliing in bike"<<name<<endl;
  }

    ~MotorCycle()
    {
        cout << "I am inside MoterCycle dtor" << endl;
    }
};
int main()
{
    // Car A("Maruti 800", "LXI", 4, 4, "Manual");
    // A.start_engine();
    // A.startAC();
    // A.stop_engine();
    // cout<<A.name<<endl;

     MotorCycle M("BMW", "VXI", 2, 4,"null",1);
      M.start_engine();
      M.wheelie();
      M.stop_engine();
    return 0;
}

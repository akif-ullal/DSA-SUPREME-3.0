/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int getlen(ListNode*head)
    {
        int len=0;
        while(head)
        {
            ++len;
            head=head->next;
        }
        return len;
    }
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head)return 0;
        int len=getlen(head);
        int actualK=(k % len);
        if(actualK==0) return head;
        int pos=len-actualK-1;
        ListNode* newTail=head;
        for(int i=0;i<pos;i++)
        {
            newTail=newTail->next;
        }
        ListNode* newHead=newTail->next;
        newTail->next=NULL;

        ListNode*temp=newHead;
        while(temp->next)
        {
            temp=temp->next;
        }
        temp->next=head;
        return newHead;
    }
};

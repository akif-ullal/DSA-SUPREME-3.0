#include <iostream>
using namespace std;

class Node{
  public:
  Node *prev;
  int data;
  Node *next;

  Node(int value)
  {
    this->data=value;
    this->prev=NULL;
    this->next=NULL;
  }
};

void insertAtHead(int value,Node *&head,Node *&tail)
{
  if(head==NULL && tail==NULL)
  {
    Node *newNode= new Node(value);
    head=newNode;
    tail=newNode;
  }
  else{
    Node *newNode=new Node(value);
    newNode->next=head;
    head->prev=newNode;
    head=newNode;
  }
}

void insertAtTail(int value,Node *&head,Node *&tail)
{
  if(head==NULL && tail==NULL)
  {
    Node *newNode= new Node(value);
    head=newNode;
    tail=newNode;
  }
  else{
    Node *newNode=new Node(value);
    tail->next=newNode;
    newNode->prev=tail;
    tail=newNode;
  }
}

int getlen(Node*&head)
{
  Node *temp=head;
  int count=0;
  while(temp!=NULL)
  {
    count++;
    temp=temp->next;
  }
  return count;
}

void insertAtPosition(int position,int value,Node*&head,Node*&tail)
{
  int length=getlen(head);
  if(position==1)
  {
    insertAtHead(value,head,tail);
  }
  else if(position==length+1)
  {
    insertAtTail(value,head,tail);
  }
  else{
    Node *temp= head;
    for(int i=0;i<position-2;i++)
    {
      temp=temp->next;
    }
    Node *forward=temp->next;
    Node *newNode=new Node(value);
    temp->next=newNode;
    newNode->prev=temp;
    newNode->next=forward;
    forward->prev=newNode;
  }

}

void deleteNode(int position,Node*&head,Node*&tail)
{
  int length=getlen(head);
  if(head==NULL && tail==NULL)
  {
    cout<<"no node is present : "<<endl;
    return;
  }
  else if(head==tail)
  {
    Node *temp=head;
    head=NULL;
    tail=NULL;
    delete temp;
  }
  else if(position==1)
  {
    Node *temp=head;
    head=temp->next;
    temp->next=NULL;
    head->prev=NULL;
    delete temp;
  }
  else if(position==length)
  {
    Node *temp=head;
    for(int i=0;i<position-2;i++)
    {
      temp=temp->next;
    }
    Node *forward=temp->next;
    forward->prev=NULL;
    temp->next=NULL;
    tail=temp;
    delete forward;

  }
  else{
    Node *backward=head;
    for(int i=0;i<position-2;i++)
    {
      backward=backward->next;
    }
    Node *curr=backward->next;
    Node *forward=curr->next;
    backward->next=forward;
    forward->prev=backward;
    curr->prev=NULL;
    curr->next=NULL;
    delete curr;
  }
}

void print(Node *&head)
{
  Node *temp=head;

  while(temp!=NULL)
  {
    cout<<temp->data<<"->";
    temp=temp->next;
  }
  cout<<"NULL"<<endl;
}

void Revprint(Node *&tail)
{
  Node *temp=tail;

  while(temp!=NULL)
  {
    cout<<temp->data<<"->";
    temp=temp->prev;
  }
  cout<<"NULL"<<endl;
}

int main() {

  Node *head=NULL;
  Node *tail=NULL;
  insertAtTail(10,head,tail);
  insertAtTail(20,head,tail);
  insertAtTail(30,head,tail);
  print(head);
  insertAtPosition(3,100,head,tail);
  print(head);
  deleteNode(4,head,tail);
  print(head);
  Revprint(tail);
 
}

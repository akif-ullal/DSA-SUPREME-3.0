class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
                vector<int>ans;
        if(root==NULL)
        return ans;
        
        queue<pair<Node*,int>>q;
        
        q.push(make_pair(root,0));
        unordered_map<int,Node*>mapp;
        int maxi=INT_MIN;
        int mini=INT_MAX;
        
        while(!q.empty())
        {
            pair<Node*,int>frontPair=q.front();
            Node* front=q.front().first;
            int hd=q.front().second;
            q.pop();
            maxi=max(maxi,hd);
            mini=min(mini,hd);
           
                mapp[hd]=front;
            
            
            if(front->left!=NULL)
            {
                q.push(make_pair(front->left,hd-1));
            }
            if(front->right!=NULL)
            {
                q.push(make_pair(front->right,hd+1));
            }
        }

        for(int i=mini;i<=maxi;i++)
        {
            Node*root=mapp[i];
            ans.push_back(root->data);
        }
        return ans;
    }
    
};
